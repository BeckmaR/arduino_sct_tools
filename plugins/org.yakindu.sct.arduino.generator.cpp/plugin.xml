<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension-point id="org.yakindu.sct.arduino.generator.cpp.architectures" name="C++ Generators Target Architectures" schema="schema/org.yakindu.sct.arduino.generator.cpp.architectures.exsd"/>
   <extension
         point="org.yakindu.sct.generator.core.generator">
      <SCTGenerator class="org.yakindu.sct.arduino.generator.cpp.ArduinoCppCodeGenerator"
            description="YAKINDU Statechart Tools for Arduino C++ Code Generator"
            id="yakindu::arduino_cpp"
            name="YAKINDU Statechart Tools for Arduino C++ Code Generator"
            contentType="statechart"
            elementRefType="org.yakindu.sct.model.sgraph.Statechart">
            <FeatureLibrary
            	library_id="org.yakindu.generator.core.features.adapted">
            </FeatureLibrary>
            <FeatureLibrary
                  library_id="org.yakindu.sct.arduino.feature.library">
            </FeatureLibrary>
      </SCTGenerator>
   </extension>
 <extension point="org.yakindu.sct.generator.core.extensions">
	 	<ExtensionGeneratorMapping fileExtension="sct" generatorId="yakindu::arduino_cpp">
	 	</ExtensionGeneratorMapping>
 	</extension>
 <extension
       point="org.yakindu.sct.generator.core.featuretypes">
    <FeatureLibrary
          defaultProvider="org.yakindu.sct.arduino.generator.cpp.features.CoreDefaultFeatureValueProvider"
          library_id="org.yakindu.generator.core.features.adapted"
          uri="platform:/plugin/org.yakindu.sct.generator.core/library/CoreFeatureTypeLibrary.xmi">
    </FeatureLibrary>
    <FeatureLibrary
          defaultProvider="org.yakindu.sct.arduino.generator.cpp.features.ArduinoDefaultFeatureValueProvider"
          library_id="org.yakindu.sct.arduino.feature.library"
          uri="platform:/plugin/org.yakindu.sct.arduino.generator.cpp/library/ArduinoFeatureTypeLibrary.xmi">
    </FeatureLibrary>
 </extension>
 <extension
       point="org.yakindu.sct.arduino.generator.cpp.architectures">
    <architecture
          id="org.yakindu.sct.arduino.generator.cpp.architecture.software"
          name="Software">
       <timer
             cppCodeGenerator="org.yakindu.sct.arduino.generator.cpp.timers.SoftwareTimer_Millis"
             description="Software Timer based on millis() functions."
             id="software.counter"
             minCyclePeriod="1"
             name="Milliseconds Counter">
       </timer>
    </architecture>
    <architecture
          id="org.yakindu.sct.arduino.generator.cpp.architecture.atmega328p"
          name="Atmel ATmega48P/88P/168P/328P">
       <timer
             cppCodeGenerator="org.yakindu.sct.arduino.generator.cpp.timers.ATmega_Timer0"
             description="Hardware timer based on Timer/Counter0, puts microcontroller into the idle sleep mode between cycles."
             id="atmega328p.timer0"
             maxCyclePeriod="1048560"
             minCyclePeriod="1"
             name="Timer/Counter0 (8 bit)">
       </timer>
       <timer
             cppCodeGenerator="org.yakindu.sct.arduino.generator.cpp.timers.ATmega_Timer1"
             description="Hardware timer based on Timer/Counter1, puts microcontroller into the idle sleep mode between cycles."
             id="atmega328p.timer1"
             maxCyclePeriod="1068960"
             minCyclePeriod="1"
             name="Timer/Counter1 (16 bit)">
       </timer>
       <timer
             cppCodeGenerator="org.yakindu.sct.arduino.generator.cpp.timers.ATmega_Timer2"
             description="Hardware timer based on Timer/Counter2, puts microcontroller into the power save sleep mode between cycles."
             id="atmega328p.timer2"
             maxCyclePeriod="1048560"
             minCyclePeriod="1"
             name="Timer/Counter2 (8 bit)">
       </timer>
    </architecture>
    <architecture
          id="org.yakindu.sct.arduino.generator.cpp.architecture.atmega2560"
          name="Atmel ATmega640/1280/1281/2560/2561">
       <timer
             cppCodeGenerator="org.yakindu.sct.arduino.generator.cpp.timers.ATmega_Timer0"
             description="Hardware timer based on Timer/Counter0, puts microcontroller into the idle sleep mode between cycles."
             id="atmega2560.timer0"
             maxCyclePeriod="1048560"
             minCyclePeriod="1"
             name="Timer/Counter0 (8 bit)">
       </timer>
       <timer
             cppCodeGenerator="org.yakindu.sct.arduino.generator.cpp.timers.ATmega_Timer1"
             description="Hardware timer based on Timer/Counter1, puts microcontroller into the idle sleep mode between cycles."
             id="atmega2560.timer1"
             maxCyclePeriod="1068960"
             minCyclePeriod="1"
             name="Timer/Counter1 (16 bit)">
       </timer>
       <timer
             cppCodeGenerator="org.yakindu.sct.arduino.generator.cpp.timers.ATmega_Timer2"
             description="Hardware timer based on Timer/Counter2, puts microcontroller into the power save sleep mode between cycles."
             id="atmega2560.timer2"
             maxCyclePeriod="1048560"
             minCyclePeriod="1"
             name="Timer/Counter2 (8 bit)">
       </timer>
       <timer
             cppCodeGenerator="org.yakindu.sct.arduino.generator.cpp.timers.ATmega_Timer3"
             description="Hardware timer based on Timer/Counter3, puts microcontroller into the idle sleep mode between cycles."
             id="atmega2560.timer3"
             maxCyclePeriod="1068960"
             minCyclePeriod="1"
             name="Timer/Counter3 (16 bit)">
       </timer>
       <timer
             cppCodeGenerator="org.yakindu.sct.arduino.generator.cpp.timers.ATmega_Timer4"
             description="Hardware timer based on Timer/Counter4, puts microcontroller into the idle sleep mode between cycles."
             id="atmega2560.timer4"
             maxCyclePeriod="1068960"
             minCyclePeriod="1"
             name="Timer/Counter4 (16 bit)">
       </timer>
       <timer
             cppCodeGenerator="org.yakindu.sct.arduino.generator.cpp.timers.ATmega_Timer5"
             description="Hardware timer based on Timer/Counter5, puts microcontroller into the idle sleep mode between cycles."
             id="atmega2560.timer5"
             maxCyclePeriod="1068960"
             minCyclePeriod="1"
             name="Timer/Counter5 (16 bit)">
       </timer>
    </architecture>
     <architecture
          id="org.yakindu.sct.arduino.generator.cpp.architecture.esp8266"
          name="ESP8266">
       <timer
             cppCodeGenerator="org.yakindu.sct.arduino.generator.cpp.timers.ESP8266_Timer"
             description="Software Timer (OS) of the ESP8266."
             id="esp8266.ostimer"
             minCyclePeriod="5"
             maxCyclePeriod="6870947"
             name="OS Software Timer">
       </timer>
    </architecture>
 </extension>
</plugin>
